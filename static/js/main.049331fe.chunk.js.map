{"version":3,"sources":["assets/icons/clear.svg","assets/delete.jpg","assets/main.jpg","actions/request-actions.js","action-creators/video-collection-ac.js","components/film-item/film-item.js","action-creators/search-ac.js","actions/data-interaction-actions.js","action-creators/sort-data-ac.js","actions/sort-actions.js","components/search-instruments-bar/search-instruments.js","containers/film-collection/film-collection.js","components/menu/menu.js","containers/film-details/film-details.js","containers/lorem.js","action-creators/add-form-ac.js","actions/add-form-actions.js","containers/add-film-form/add-film-form.js","App.js","reducers/add-form-reducer.js","reducers/search_reducer.js","reducers/sort-reducer.js","sagas/fetch-saga.js","sagas/add-film-saga.js","sagas/delete-film-saga.js","sagas/add-file-films-saga.js","sagas/root-saga.js","store/store.js","reducers/main-reducer.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","START_FETCHING_FILMS","ADD_FILM","DELETE_FILM","CHANGE_DELETE_STATUS","DELETE_FILM_FROM_STORE","ADD_FILE_FILMS","FILMS_TO_STORE","startFechingData","type","deleteFilm","id","changeDeleteStatus","payload","addFileFilms","target","connect","actions","props","title","deleteStatus","react_default","a","createElement","className","alt","onClick","status","toggleDeleteItem","src","require","Link","to","concat","searchByName","string","searchByActor","changeSearchMethod","method","inputChangesToStore","value","sortByAz","sortByZa","mapDispatchToProps","Object","objectSpread","search_actions","sort_actions","state","search","inputValue","searchString","sortStatus","Option","Select","uploadFile","onChange","e","input","placeholder","es_select","onSelect","defaultValue","es_button","htmlType","FilmCollection","this","_this$props","films","search_instruments_bar_search_instruments","length","spin","filter","elem","visible","map","index","film_item_film_item","key","_id","name","Component","propsTypes","PropTypes","array","func","mainReducer","Menu","FilmDetails","itemId","data","el","i","year","format","actors","join","MockPage","_ref","currentPage","style","width","display","justifyContent","changeFilmName","changeFilmYear","changeFilmFormat","changeFilmActors","addFilm","filmData","validateInputs","result","form","validation","valid","TextArea","Input","simpleValidation","actorsFromStore","split","filmYearFromStore","Number","prepareDataToRequest","rows","es_alert","message","showIcon","App","BrowserRouter","menu_menu","Switch","Route","path","component","MainScreen","exact","render","match","params","film_details_film_details","_ref2","current","lorem","AddFilmForm","initialState","instialState","fetchDataWorker","watchFetchData","getPosts","axios","url","response","regenerator_default","wrap","_context","prev","next","call","sent","put","stop","_marked","_context2","takeEvery","_marked2","FileFilmsWorker","watchFileFilms","FileFilms","action","add_film_saga_marked","add_film_saga_marked2","deleteFilmWorker","watchDeleteFilms","t0","delete_film_saga_marked","delete_film_saga_marked2","addFilmWorker","watchAddFilms","element","files","headers","Content-Type","then","_","Promise","resolve","add_file_films_saga_marked","add_file_films_saga_marked2","rootSaga","all","root_saga_marked","rootReducer","combineReducers","arguments","undefined","toConsumableArray","film","findIndex","slice","searchElementsByActor","toLowerCase","indexOf","searchElementsByName","sort","b","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","Boolean","location","hostname","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.049331fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear.441d8611.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.79bd20bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/main.2ca7d496.jpg\";","export const START_FETCHING_FILMS = 'START_FETCHING_FILMS';\r\n\r\nexport const ADD_FILM = 'ADD_FILM';\r\n\r\nexport const DELETE_FILM = 'DELETE_FILM';\r\n\r\nexport const CHANGE_DELETE_STATUS = 'CHANGE_DELETE_STATUS';\r\n\r\nexport const DELETE_FILM_FROM_STORE = 'DELETE_FILM_FROM_STORE';\r\n\r\nexport const ADD_FILE_FILMS = 'ADD_FILE_FILMS';\r\n\r\nexport const FILMS_TO_STORE = 'FILMS_TO_STORE';\r\n\r\n","/* eslint-disable indent,no-console */\r\nimport { START_FETCHING_FILMS,\r\n    ADD_FILE_FILMS,\r\n    DELETE_FILM,\r\n    CHANGE_DELETE_STATUS } from '../actions/request-actions';\r\n\r\nexport const startFechingData = () => ({\r\n    type: START_FETCHING_FILMS,\r\n});\r\n\r\nexport const deleteFilm = (id) => ({\r\n    type: DELETE_FILM,\r\n    id\r\n});\r\n\r\nexport const changeDeleteStatus = (payload) => ({\r\n    type: CHANGE_DELETE_STATUS,\r\n    payload\r\n});\r\n\r\nexport const addFileFilms = (target) => ({\r\n    type: ADD_FILE_FILMS,\r\n    target\r\n});\r\n\r\n\r\n\r\n\r\n\r\n","/* eslint-disable no-unused-vars,no-undef */\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport * as actions from '../../action-creators/video-collection-ac';\r\nimport PropTypes from 'prop-types';\r\nimport './film-item.css';\r\n\r\nconst FilmItem = (props) =>{\r\n    const {title,\r\n        id,\r\n        deleteFilm,\r\n        deleteStatus,\r\n        changeDeleteStatus} = props;\r\n\r\n    const toggleDeleteItem = (id) => {\r\n        changeDeleteStatus({id, status: 'waiting'});\r\n        deleteFilm(id);\r\n    };\r\n\r\n    return(\r\n        <div className='film-item-container'>\r\n            <div className='delete-icon-container'>\r\n                <img\r\n                    alt='delete-icon'\r\n                    onClick={() => toggleDeleteItem(id)}\r\n                    className='delete-film'\r\n                    src={require('../../assets/icons/clear.svg')}\r\n                />\r\n            </div>\r\n            <Link to={`/cartoons/${id}`}>\r\n                <img className='film-image'\r\n                    alt='placeholder-img'\r\n                    src={ deleteStatus === 'waiting'\r\n                        ? require('../../assets/delete.jpg')\r\n                        : require('../../assets/main.jpg')\r\n                    }\r\n                />\r\n                <h4 className='film-title'>\r\n                    {deleteStatus === 'waiting' ? 'waiting' : title}\r\n                </h4>\r\n            </Link>\r\n        </div>\r\n    );};\r\n\r\nFilmItem.propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    deleteFilm: PropTypes.func,\r\n    deleteStatus: PropTypes.string,\r\n    changeDeleteStatus: PropTypes.func\r\n};\r\n\r\nexport default connect(null, actions)(FilmItem);\r\n","import { SEARCH_BY_NAME, SEARCH_BY_ACTOR, CHANGE_SEARCH_METHOD, CHANGE_SEARCH_INPUT } from '../actions/data-interaction-actions';\r\n\r\nexport const searchByName = (string) => ({\r\n    type: SEARCH_BY_NAME,\r\n    string\r\n});\r\n\r\nexport const searchByActor = (string) => ({\r\n    type: SEARCH_BY_ACTOR,\r\n    string\r\n});\r\n\r\nexport const changeSearchMethod = (method) =>({\r\n    type: CHANGE_SEARCH_METHOD,\r\n    method\r\n});\r\n\r\nexport const inputChangesToStore = (value) => ({\r\n    type: CHANGE_SEARCH_INPUT,\r\n    value\r\n});","export const SEARCH_BY_NAME = 'SEARCH_BY_NAME';\r\n\r\nexport const SEARCH_BY_ACTOR = 'SEARCH_BY_ACTOR';\r\n\r\nexport const CHANGE_SEARCH_METHOD = 'CHANGE_SEARCH_METHOD';\r\n\r\nexport const CHANGE_SEARCH_INPUT = 'CHANGE_SEARCH_INPUT';\r\n\r\n","import {SORT_BY_AZ, SORT_BY_ZA} from '../actions/sort-actions';\r\n\r\nexport const sortByAz = () => ({\r\n    type: SORT_BY_AZ,\r\n    status: 'sorted_az'\r\n});\r\n\r\nexport const sortByZa = () => ({\r\n    type: SORT_BY_ZA,\r\n    status: 'sorted_za'\r\n});","export const SORT_BY_AZ = 'SORT_BY_AZ';\r\n\r\nexport const SORT_BY_ZA = 'SORT_BY_ZA';\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Select, Button, Input } from 'antd';\r\nimport * as search_actions from '../../action-creators/search-ac';\r\nimport * as sort_actions from '../../action-creators/sort-data-ac';\r\nimport PropTypes from 'prop-types';\r\nimport './search-instruments.css';\r\n\r\nconst SearchInstruments = (props) => {\r\n    const Option = Select.Option;\r\n    const { sortStatus,\r\n        method,\r\n        inputValue,\r\n        uploadFile,\r\n        searchByName,\r\n        searchByActor,\r\n        changeSearchMethod,\r\n        inputChangesToStore,\r\n        sortByAz,\r\n        sortByZa\r\n    } = props;\r\n\r\n    const onInputChange = (value) => {\r\n        inputChangesToStore(value);\r\n        if(method === 'by_name'){\r\n            searchByName(value);\r\n        }else if(method === 'by_actor'){\r\n            searchByActor(value);\r\n        }\r\n    };\r\n\r\n    const sortToggle = () => {\r\n        if(sortStatus === 'not_sorted' || sortStatus === 'sorted_za'){\r\n            sortByAz();\r\n        }else if(sortStatus === 'sorted_az'){\r\n            sortByZa();\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className='instrument-panel'>\r\n            <input\r\n                className='upload-input'\r\n                type='file'\r\n                onChange={(e) => uploadFile(e.target)}/>\r\n            <Input\r\n                value={inputValue}\r\n                className='search-input'\r\n                placeholder='Search film'\r\n                onChange={(e) => onInputChange(e.target.value)}\r\n            />\r\n            <Select\r\n                className='select-method'\r\n                onSelect={(value) => changeSearchMethod(value)}\r\n                defaultValue='by_name'>\r\n                <Option value='by_name'>\r\n                    by name\r\n                </Option>\r\n                <Option value='by_actor'>\r\n                    by actor\r\n                </Option>\r\n            </Select>\r\n            <Button\r\n                htmlType='button'\r\n                id='sort-button'\r\n                onClick={() => sortToggle()}>\r\n                { sortStatus === 'not_sorted' || sortStatus === 'sorted_za'\r\n                    ? 'Sort A-Z'\r\n                    : 'Sort Z-A' }\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nSearchInstruments.propTypes = {\r\n    sortStatus: PropTypes.string,\r\n    method: PropTypes.string,\r\n    inputValue: PropTypes.string,\r\n    uploadFile: PropTypes.func,\r\n    searchByName: PropTypes.func,\r\n    searchByActor: PropTypes.func,\r\n    changeSearchMethod: PropTypes.func,\r\n    inputChangesToStore: PropTypes.func,\r\n    sortByAz: PropTypes.func,\r\n    sortByZa: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    method: state.search.method,\r\n    inputValue: state.search.searchString,\r\n    sortStatus: state.sortStatus.status\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    ...search_actions,\r\n    ...sort_actions\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInstruments);","/* eslint-disable no-unused-vars */\r\nimport React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Spin } from 'antd';\r\nimport * as actions from '../../action-creators/video-collection-ac';\r\nimport FilmItem from '../../components/film-item/film-item';\r\nimport SearchInstruments from '../../components/search-instruments-bar/search-instruments';\r\nimport PropTypes from 'prop-types';\r\nimport './film-collection.css';\r\n\r\nclass FilmCollection extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.startFechingData();\r\n    }\r\n\r\n    render() {\r\n        const {films, addFileFilms} = this.props;\r\n        const uploadFile = (target) => {\r\n            addFileFilms(target);\r\n        };\r\n        return (\r\n            <div className='main-screen-container'>\r\n                <SearchInstruments uploadFile={(e) => uploadFile(e)}/>\r\n                {films.length === 0\r\n                    ?(<Spin className='film-spin'/>)\r\n                    :(<div className='film-container'>\r\n                        {films\r\n                            .filter((elem) => elem.visible === true)\r\n                            .map((elem, index) => (\r\n                                <FilmItem\r\n                                    deleteStatus={elem.deleteStatus}\r\n                                    key={index}\r\n                                    id={elem._id}\r\n                                    title={elem.name}\r\n                                />\r\n                            ))}\r\n                    </div>)\r\n                }</div>\r\n        );\r\n    }\r\n}\r\n\r\nFilmCollection.propsTypes = {\r\n    films: PropTypes.array,\r\n    addFileFilms: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    films: state.mainReducer\r\n});\r\nexport default connect(mapStateToProps, actions)(FilmCollection);\r\n","/* eslint-disable no-unused-vars,quotes */\r\nimport React from 'react';\r\nimport './menu.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Menu = () => (\r\n    <div className='menu-container'>\r\n        <div className='logo'> WebbyLab Test</div>\r\n        <ul className='menu-list'>\r\n            <li><Link className='router-link' to={`/WL-Deploy`}>All films</Link></li>\r\n            <li><Link className='router-link' to={`/WL-Deploy/add`}>Add film</Link></li>\r\n            <li><Link className='router-link' to={`/WL-Deploy/pages/lorem`}>Lorem</Link></li>\r\n            <li><Link className='router-link' to={`/WL-Deploy/pages/ipsum`}>Ipsum</Link></li>\r\n            <li><Link className='router-link' to={`/WL-Deploy/pages/dolor`}>Dolor</Link></li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default Menu;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './film-details.css';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport * as actions from '../../action-creators/video-collection-ac';\r\n\r\nclass FilmDetails extends Component{\r\n\r\n    componentDidMount() {\r\n        this.props.startFechingData();\r\n    }\r\n\r\n    render(){\r\n        const {itemId, data} = this.props;\r\n        return(\r\n            <div className='cartoon-details-container'>\r\n                {data.length === 0\r\n                    ? (<Spin/>)\r\n                    :(data.filter(elem => elem._id === itemId)\r\n                        .map((el, i) => (\r\n                            <div key={i} className='cartoon-details-group'>\r\n                                <h3>{el.name}</h3>\r\n                                <p> Year: {el.year}</p>\r\n                                <p> Format: {el.format}</p>\r\n                                <div className='actors-container'>\r\n                                Actors: {el.actors.join(', ')}.\r\n                                </div>\r\n                            </div>)))}\r\n            </div>);}\r\n}\r\n\r\nFilmDetails.propTypes = {\r\n    itemId: PropTypes.string,\r\n    data: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.mainReducer\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(FilmDetails);\r\n\r\n","/* eslint-disable no-unused-vars */\r\nimport  React from 'react';\r\n\r\nconst MockPage = ({currentPage}) =>(\r\n    <div style={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n        {`this is mock page ${currentPage}`}\r\n    </div>\r\n);\r\n\r\nexport default MockPage;","import {CHANGE_FILM_NAME,\r\n    CHANGE_FILM_YEAR,\r\n    CHANGE_FILM_FORMAT,\r\n    CHANGE_FILM_ACTORS,\r\n    VALIDATE_INPUTS} from '../actions/add-form-actions';\r\nimport {ADD_FILM} from '../actions/request-actions';\r\n\r\nexport const changeFilmName = (name) => ({\r\n    type: CHANGE_FILM_NAME,\r\n    name\r\n});\r\n\r\nexport const changeFilmYear = (year) => ({\r\n    type: CHANGE_FILM_YEAR,\r\n    year\r\n});\r\n\r\nexport const changeFilmFormat = (format) => ({\r\n    type: CHANGE_FILM_FORMAT,\r\n    format\r\n});\r\n\r\nexport const changeFilmActors = (actors) => ({\r\n    type: CHANGE_FILM_ACTORS,\r\n    actors\r\n});\r\n\r\nexport const addFilm = (filmData) => ({\r\n    type: ADD_FILM,\r\n    filmData\r\n});\r\n\r\nexport const validateInputs = (result) => ({\r\n    type: VALIDATE_INPUTS,\r\n    result\r\n});","export const CHANGE_FILM_NAME = 'CHANGE_FILM_NAME';\r\n\r\nexport const CHANGE_FILM_YEAR = 'CHANGE_FILM_YEAR';\r\n\r\nexport const CHANGE_FILM_FORMAT = 'CHANGE_FILM_FORMAT';\r\n\r\nexport const CHANGE_FILM_ACTORS = 'CHANGE_FILM_ACTORS';\r\n\r\nexport const VALIDATE_INPUTS = 'VALIDATE_INPUTS';","import React from 'react';\r\nimport { connect} from 'react-redux';\r\nimport { Select, Input, Button, Alert } from 'antd';\r\nimport * as actions from '../../action-creators/add-form-ac';\r\nimport './add-film-form.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddFilmForm = (props) => {\r\n    const Option = Select.Option;\r\n    const { TextArea } = Input;\r\n\r\n    const { addFilm,\r\n        validation,\r\n        validateInputs,\r\n        changeFilmName,\r\n        changeFilmYear,\r\n        changeFilmFormat,\r\n        changeFilmActors,\r\n        name,\r\n        year,\r\n        format,\r\n        actors} = props;\r\n\r\n    const prepareDataToRequest = () => {\r\n        const actorsFromStore = actors.split(',');\r\n        const filmYearFromStore = Number(year);\r\n        const requestData = {\r\n            name,\r\n            year: filmYearFromStore,\r\n            actors: actorsFromStore,\r\n            format,\r\n        };\r\n        addFilm(requestData);\r\n    };\r\n\r\n    const simpleValidation = () => {\r\n        if(name === '' || year === '' || format === '' || actors === ''){\r\n            validateInputs(false);\r\n        }else{\r\n            validateInputs(true);\r\n            prepareDataToRequest();\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className='add-form-container'>\r\n            <div className='add-form-group'>\r\n                <Input\r\n                    className='add-input'\r\n                    value={name}\r\n                    placeholder='Film name'\r\n                    onChange={(e) => changeFilmName(e.target.value)}/>\r\n                <Input\r\n                    className='add-input'\r\n                    value={year}\r\n                    placeholder='Year'\r\n                    onChange={(e) => changeFilmYear(e.target.value)}/>\r\n                <Select\r\n                    className='add-select'\r\n                    placeholder='Format'\r\n                    onSelect={(value) => changeFilmFormat(value)}>\r\n                    <Option value='DVD'>DVD</Option>\r\n                    <Option value='Blu-Ray'>Blu-Ray</Option>\r\n                    <Option value='VHS'>VHS</Option>\r\n                </Select>\r\n                <TextArea\r\n                    className='add-actors-area'\r\n                    value={actors}\r\n                    rows={4}\r\n                    placeholder='Actors'\r\n                    onChange={(e) => changeFilmActors(e.target.value)}/>\r\n                <Button\r\n                    className='add-button'\r\n                    type='primary'\r\n                    onClick={() => simpleValidation()}>Add film</Button>\r\n            </div>\r\n            {validation === false ? (<Alert message=\"All fields required\" type=\"error\" showIcon />) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nAddFilmForm.propTypes = {\r\n    addFilm: PropTypes.func,\r\n    changeFilmName: PropTypes.func,\r\n    changeFilmYear: PropTypes.func,\r\n    changeFilmFormat: PropTypes.func,\r\n    changeFilmActors: PropTypes.func,\r\n    validateInputs: PropTypes.func,\r\n    name: PropTypes.string,\r\n    year: PropTypes.string,\r\n    format: PropTypes.string,\r\n    actors: PropTypes.string,\r\n    validation: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: state.form.name,\r\n    year: state.form.year,\r\n    format: state.form.format,\r\n    actors: state.form.actors,\r\n    validation: state.form.valid\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(AddFilmForm);\r\n\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport MainScreen from './containers/film-collection/film-collection';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Menu from './components/menu/menu';\r\nimport FilmDetails from './containers/film-details/film-details';\r\nimport MockPage from './containers/lorem';\r\nimport AddFilmForm from './containers/add-film-form/add-film-form';\r\n\r\nconst App = () => (\r\n    <Router>\r\n        <div className=\"App\">\r\n            <Menu/>\r\n            <Switch>\r\n                <Route\r\n                    path='/WL-Deploy'\r\n                    component={MainScreen}\r\n                    exact/>\r\n                <Route\r\n                    path='/WL-Deploy/cartoons/:id'\r\n                    render={({match}) =>{\r\n                        const { id } = match.params;\r\n                        return <FilmDetails itemId={id}/>;\r\n                    }}/>\r\n                <Route\r\n                    path='/WL-Deploy/pages/:current'\r\n                    render={({match}) =>{\r\n                        const { current } = match.params;\r\n                        return <MockPage currentPage={current}/>;\r\n                    }}/>\r\n                <Route path='/WL-Deploy/add' component={AddFilmForm}/>\r\n            </Switch>\r\n        </div>\r\n    </Router>\r\n);\r\n\r\nexport default App;\r\n\r\n\r\n","import {CHANGE_FILM_NAME,\r\n    CHANGE_FILM_YEAR,\r\n    CHANGE_FILM_FORMAT,\r\n    CHANGE_FILM_ACTORS,\r\n    VALIDATE_INPUTS} from '../actions/add-form-actions';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    year: '',\r\n    format: '',\r\n    actors: '',\r\n    valid: null\r\n};\r\n\r\nexport const formReducer = (state = initialState, action) =>{\r\n    switch (action.type){\r\n    case CHANGE_FILM_NAME:\r\n        return({...state, name: action.name});\r\n    case CHANGE_FILM_YEAR:\r\n        return({...state, year: action.year});\r\n    case CHANGE_FILM_FORMAT:\r\n        return({...state, format: action.format});\r\n    case CHANGE_FILM_ACTORS:\r\n        return({...state, actors: action.actors});\r\n    case VALIDATE_INPUTS:\r\n        return({...state, valid: action.result});\r\n    default :\r\n        return state;\r\n    }\r\n};","import { CHANGE_SEARCH_METHOD, CHANGE_SEARCH_INPUT } from '../actions/data-interaction-actions';\r\n\r\nconst initialState = {\r\n    searchString: '',\r\n    method: 'by_name'\r\n};\r\n\r\nexport const searchReducer = (state = initialState, action) =>{\r\n    switch (action.type){\r\n    case CHANGE_SEARCH_METHOD:\r\n        return {...state, method: action.method};\r\n    case CHANGE_SEARCH_INPUT:\r\n        return {...state, searchString: action.value};\r\n    default:\r\n        return state;\r\n    }\r\n};","/* eslint-disable no-case-declarations */\r\nimport {SORT_BY_ZA, SORT_BY_AZ} from '../actions/sort-actions';\r\n\r\nconst instialState = {\r\n    status: 'not_sorted'\r\n};\r\n\r\nexport const sortReducer = (state = instialState, action) =>{\r\n    switch (action.type){\r\n    case SORT_BY_ZA:\r\n        return {...state, status: action.status};\r\n    case SORT_BY_AZ:\r\n        return {...state, status: action.status};\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import axios from 'axios';\r\nimport {START_FETCHING_FILMS, FILMS_TO_STORE } from '../actions/request-actions';\r\nimport { takeEvery, put, call } from 'redux-saga/effects';\r\n\r\n\r\nfunction getPosts() {\r\n    return axios({\r\n        url: 'https://obscure-depths-62229.herokuapp.com/api/v1/films',\r\n        method: 'GET',\r\n    });\r\n}\r\n\r\nfunction* fetchDataWorker(){\r\n    const response = yield call(getPosts);\r\n    const films = response.data.map((elem) => (\r\n        {...elem, visible: true, deleteStatus: 'no-delete'}\r\n    ));\r\n    yield put({\r\n        type: FILMS_TO_STORE,\r\n        films\r\n    });\r\n}\r\n\r\nexport default function* watchFetchData(){\r\n    yield takeEvery(START_FETCHING_FILMS, fetchDataWorker);\r\n}\r\n\r\n","import axios from 'axios';\r\nimport { ADD_FILM } from '../actions/request-actions';\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nfunction FileFilms(filmData){\r\n    return axios({\r\n        url: 'https://obscure-depths-62229.herokuapp.com/api/v1/film',\r\n        method: 'POST',\r\n        data: filmData\r\n    });\r\n}\r\n\r\nfunction* FileFilmsWorker(action){\r\n    yield call(FileFilms, action.filmData);\r\n    yield put({type: 'START_FETCHING_FILMS'});\r\n}\r\n\r\nexport default function* watchFileFilms(){\r\n    yield takeEvery( ADD_FILM, FileFilmsWorker);\r\n}\r\n","import axios from 'axios';\r\nimport { DELETE_FILM, DELETE_FILM_FROM_STORE, CHANGE_DELETE_STATUS} from '../actions/request-actions';\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nfunction deleteFilm(id){\r\n    return axios({\r\n        url: `https://obscure-depths-62229.herokuapp.com/api/v1/film/${id}`,\r\n        method: 'DELETE'});\r\n}\r\n\r\nfunction* deleteFilmWorker(action){\r\n    try{\r\n        yield call(deleteFilm, action.id);\r\n        yield put({type: DELETE_FILM_FROM_STORE, id: action.id});\r\n    } catch (e) {\r\n        const payload = {id: action.id, status: 'no_delete'};\r\n        yield put({type: CHANGE_DELETE_STATUS, payload});\r\n        \r\n    }\r\n}\r\n\r\nexport default function* watchDeleteFilms(){\r\n    yield takeEvery( DELETE_FILM, deleteFilmWorker);\r\n}\r\n","import axios from 'axios';\r\nimport {ADD_FILE_FILMS} from '../actions/request-actions';\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nfunction addFilm(element){\r\n    return axios({\r\n        url: 'https://obscure-depths-62229.herokuapp.com/api/v1/films/fromFile',\r\n        method: 'POST',\r\n        data: element.files[0],\r\n        headers: {\r\n            'Content-Type': 'text/plain'\r\n        }\r\n    }).then(_ => {\r\n        element.value = '';\r\n        return Promise.resolve(_);\r\n    });\r\n}\r\n\r\nfunction* addFilmWorker(action){\r\n    yield call(addFilm, action.target);\r\n    yield put({type: 'START_FETCHING_FILMS'});\r\n}\r\n\r\nexport default function* watchAddFilms(){\r\n    yield takeEvery( ADD_FILE_FILMS, addFilmWorker);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport watchFetchData from './fetch-saga';\r\nimport watchAddFilms from './add-film-saga';\r\nimport watchDeleteFilms from './delete-film-saga';\r\nimport watchFileFilms from './add-file-films-saga';\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        watchFetchData(),\r\n        watchAddFilms(),\r\n        watchDeleteFilms(),\r\n        watchFileFilms()\r\n    ]);\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport { mainReducer } from '../reducers/main-reducer';\r\nimport { formReducer } from '../reducers/add-form-reducer';\r\nimport { searchReducer } from '../reducers/search_reducer';\r\nimport { sortReducer }  from '../reducers/sort-reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas/root-saga';\r\n\r\nconst rootReducer = combineReducers({\r\n    mainReducer,\r\n    form: formReducer,\r\n    search: searchReducer,\r\n    sortStatus: sortReducer\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst initialState = {};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(\r\n        applyMiddleware(sagaMiddleware)\r\n    )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);","/* eslint-disable no-case-declarations */\r\nimport { FILMS_TO_STORE, CHANGE_DELETE_STATUS, DELETE_FILM_FROM_STORE } from '../actions/request-actions';\r\nimport { SEARCH_BY_NAME, SEARCH_BY_ACTOR } from '../actions/data-interaction-actions';\r\nimport { SORT_BY_AZ, SORT_BY_ZA } from '../actions/sort-actions';\r\n\r\nexport const mainReducer = (state = [], action) =>{\r\n    switch (action.type){\r\n    case FILMS_TO_STORE:\r\n        return [\r\n            ...action.films,\r\n        ];\r\n    case CHANGE_DELETE_STATUS:\r\n        return state.map(film => film._id === action.payload.id\r\n            ? {...film, deleteStatus: action.payload.status}\r\n            : {...film}\r\n        );\r\n    case DELETE_FILM_FROM_STORE:\r\n        const index = state.findIndex(film => film._id === action.id);\r\n        return [...state.slice(0, index), ...state.slice(index +1)];\r\n    case SEARCH_BY_ACTOR:\r\n        const searchElementsByActor = state.map(film =>\r\n            film.actors.join(' ').toLowerCase().indexOf(action.string.toLowerCase()) === -1\r\n                ?{...film, visible: false}\r\n                :{...film, visible: true}\r\n        );\r\n        return[...searchElementsByActor];\r\n    case SEARCH_BY_NAME:\r\n        const searchElementsByName = state.map(film =>\r\n            film.name.toLowerCase().indexOf(action.string.toLowerCase()) === -1\r\n                ?{...film, visible: false}\r\n                :{...film, visible: true}\r\n        );\r\n        return[...searchElementsByName];\r\n    case SORT_BY_AZ:\r\n        const sortAZ = (a, b) => {\r\n            if(a.name < b.name) { return -1;}\r\n            if(a.name > b.name) { return 1; }\r\n            return 0;\r\n        };\r\n        return state.slice().sort(sortAZ);\r\n    case SORT_BY_ZA:\r\n        const sortZA = (a, b) => {\r\n            if(a.name < b.name) { return 1;}\r\n            if(a.name > b.name) { return -1; }\r\n            return 0;\r\n        };\r\n        return state.slice().sort(sortZA);\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n\r\n","/* eslint-disable no-console,no-undef */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport App from './App';\r\nimport { store} from './store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nconst Root = () => (\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}